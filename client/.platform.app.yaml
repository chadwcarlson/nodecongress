name: nextjs

type: 'nodejs:14'

dependencies:
    nodejs:
        yarn: "1.22.17"
        pm2: "5.2.0"

build:
    flavor: none

variables:
    env:
        NODE_OPTIONS: --max-old-space-size=1536

size: L

resources:
    base_memory: 1024
    memory_ratio: 1024

hooks:
    build: |
        # 1. Build dependencies.
        set -e
        yarn --frozen-lockfile
    post_deploy: |
        # 3. Rebuild now that the backend is available.
        yarn build
web:
    commands:
        start: |
            # 2. Build the site and start the pm2 process, watching for changes brought by post_deploy.
            yarn build
            APP=$(cat package.json | jq -r '.name')
            pm2 start npm --no-daemon --watch --name $APP -- start -- -p $PORT
disk: 512

mounts:
    "/.cache":
        source: local
        source_path: cache
    /.next:
        source: local
        source_path: 'next'
    /.pm2:
        source: local
        source_path: 'pm2'

operations:
    next-rebuild:
        role: admin
        commands:
            start: npm run build
            # start: npx next build 
            # start: next build 
    pm2:
        role: admin 
        commands: 
            start: |
                # Assuming pm2 start npm --no-daemon --watch --name $APP -- start -- -p $PORT
                APP=$(cat package.json | jq -r '.name')
                # pm2 ping $APP
                # pm2 reload $APP 
                pm2 restart $APP

    # strapi: 
    #     role: admin 
    #     commands: 
    #         start: |
    #             DUMP_DIR=$PLATFORM_APP_DIR/dumps
    #             rm -rf $DUMP_DIR/*

    #             timestamp=$(date '+%Y%m%d%k%S')
    #             strapi config:dump -f dump_$timestamp.json
    #             strapi export -k $PLATFORM_PROJECT_ENTROPY -f $DUMP_DIR/export_$timestamp.tar.gz.enc
    #             echo $timestamp